package bigframe.workflows.BusinessIntelligence.RTG.graph

/**
 * Not compatible with Spark versions higher than 0.9
 * @author mayuresh
 *
 */
import org.apache.spark.bagel._
import org.apache.spark.bagel.Bagel._

class TRVertex (
  val id: Int, 
  val ranks: Seq[(String, Double)], 
  val outEdges: Seq[Int],
  val transInProb: Seq[(Int, Seq[(String, Double)])],
  val teleProb: Seq[(String, Double)],
  val active: Boolean ) extends Vertex with Serializable

class TRMessage (
  val targetId: Int,
  val sourceId: Int,
  val rankShare: Seq[(String, Double)] ) extends Message[Int] with Serializable

/** Default combiner that simply appends messages together (i.e. performs no aggregation) */
class TRCombiner extends Combiner[TRMessage, Seq[TRMessage]] 
with Serializable {
  def createCombiner(msg: TRMessage): Seq[TRMessage] =
    List(msg)
  def mergeMsg(combiner: Seq[TRMessage], msg: TRMessage): Seq[TRMessage] =
    combiner :+ msg
  def mergeCombiners(a: Seq[TRMessage], b: Seq[TRMessage]): Seq[TRMessage] =
    a ++ b
}
